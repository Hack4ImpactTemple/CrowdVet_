{"ast":null,"code":"import _classCallCheck from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/src/CVEvaluation.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CVEvaluation.css';\nimport CVNumberLineHeader from './CVNumberLineHeader';\nimport CVNumberLine from './CVNumberLine';\n/**\n * Constructs an Evaluation object\n * \n * This JSX element requires the following props:\n *   String prompt: The quality we're rating on (Ex: Overall, has meaningful impact)\n *   Object rating: {\n *      int min: Minimum possible rating\n *      int max: Maximum possible rating\n *   }\n *   String description: Additional description (shown below the rating bars)\n *   Object votes: {\n *      int kiva: Kiva's vote\n *      int user: User's vote\n *      int avg: Average vote\n *      int[] avgs: Average votes for each tier (i.e. votes for 1,2,3,4,5,6) \n *   }\n */\n\nvar CVEvaluation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CVEvaluation, _Component);\n\n  function CVEvaluation(props) {\n    var _this;\n\n    _classCallCheck(this, CVEvaluation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CVEvaluation).call(this, props));\n    _this.state = {};\n    _this.props = props;\n    return _this;\n  }\n\n  _createClass(CVEvaluation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"cv-evaluation-\" + this.props.index,\n        class: \"cv-evaluation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"text-align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.prompt)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(CVNumberLineHeader, {\n        id: \"cv-evaluation-\" + this.props.index + \"-header\",\n        title: \"Prioritization =\",\n        height: 38,\n        width: 700,\n        start: 1,\n        end: this.props.scale,\n        color: this.props.colors.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(CVNumberLine, {\n        id: \"cv-evaluation-\" + this.props.index + \"-kiva\",\n        title: \"Kiva's Vote\",\n        height: 38,\n        width: 700,\n        value: this.props.votes.kiva,\n        scale: this.props.scale,\n        color: this.props.colors.kiva,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        class: \"cv-evaluation-description\",\n        style: {\n          color: this.props.colors.kiva\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.description)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(CVNumberLine, {\n        id: \"cv-evaluation-\" + this.props.index + \"-you\",\n        title: \"Your Vote\",\n        height: 38,\n        width: 700,\n        value: this.props.votes.user,\n        scale: this.props.scale,\n        color: this.props.colors.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        class: \"cv-evaluation-description\",\n        style: {\n          color: this.props.colors.user\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.description)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(CVNumberLine, {\n        id: \"cv-evaluation-\" + this.props.index + \"-crowd\",\n        title: \"Crowd Average\",\n        height: 140,\n        width: 700,\n        value: this.props.votes.average,\n        scale: this.props.scale,\n        votes: this.props.votes.distribution,\n        color: this.props.colors.average,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return;\n      var canvas = document.getElementById(\"cv-evaluation-\" + this.props.index);\n      var ctx = canvas.getContext(\"2d\");\n      var height = canvas.height;\n      var width = canvas.width;\n      var linewidth = width;\n      ctx.moveTo(0, height / 2);\n      ctx.lineTo(linewidth, height / 2);\n      ctx.stroke();\n      var tickHeight = 10;\n      var ticks = [linewidth * 0.1, linewidth * 0.3, linewidth * 0.5, linewidth * 0.7, linewidth * 0.9];\n\n      for (var i = 0; i < ticks.length; i++) {\n        ctx.moveTo(ticks[i], height / 2);\n        ctx.lineTo(ticks[i], height / 2 - tickHeight);\n        ctx.stroke();\n      }\n    }\n  }]);\n\n  return CVEvaluation;\n}(Component);\n\nCVEvaluation.propTypes = {// ... prop types here\n};\nCVEvaluation.defaultProps = {// ... default props here\n};\nexport default CVEvaluation;","map":{"version":3,"sources":["/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/src/CVEvaluation.js"],"names":["React","Component","PropTypes","CVNumberLineHeader","CVNumberLine","CVEvaluation","props","state","index","prompt","scale","colors","header","votes","kiva","color","description","user","average","distribution","canvas","document","getElementById","ctx","getContext","height","width","linewidth","moveTo","lineTo","stroke","tickHeight","ticks","i","length","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CVEvaluation.css';\n\nimport CVNumberLineHeader from './CVNumberLineHeader';\nimport CVNumberLine from './CVNumberLine';\n\n/**\n * Constructs an Evaluation object\n * \n * This JSX element requires the following props:\n *   String prompt: The quality we're rating on (Ex: Overall, has meaningful impact)\n *   Object rating: {\n *      int min: Minimum possible rating\n *      int max: Maximum possible rating\n *   }\n *   String description: Additional description (shown below the rating bars)\n *   Object votes: {\n *      int kiva: Kiva's vote\n *      int user: User's vote\n *      int avg: Average vote\n *      int[] avgs: Average votes for each tier (i.e. votes for 1,2,3,4,5,6) \n *   }\n */\nclass CVEvaluation extends Component {\n  \n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.props = props;\n    }\n  \n    render() { \n        return (\n            <div id={\"cv-evaluation-\" + this.props.index} class={\"cv-evaluation\"}>\n                <div>\n                    <span class=\"text-align-left\">{this.props.prompt}</span>\n                </div>\n                <div>\n                    <CVNumberLineHeader\n                        id={\"cv-evaluation-\" + this.props.index + \"-header\"}\n                        title={\"Prioritization =\"}\n                        height={38} width={700}\n                        start={1} end={this.props.scale}\n                        color={this.props.colors.header}\n                    />\n                </div>\n                <div>\n                    <CVNumberLine \n                        id={\"cv-evaluation-\" + this.props.index + \"-kiva\"}\n                        title={\"Kiva's Vote\"}\n                        height={38} width={700}\n                        value={this.props.votes.kiva} scale={this.props.scale}\n                        color={this.props.colors.kiva}\n                    />\n                    <span class=\"cv-evaluation-description\" style={{color: this.props.colors.kiva}}>{this.props.description}</span>\n                </div>\n                <div>\n                    <CVNumberLine \n                        id={\"cv-evaluation-\" + this.props.index + \"-you\"}\n                        title={\"Your Vote\"}\n                        height={38} width={700}\n                        value={this.props.votes.user} scale={this.props.scale}\n                        color={this.props.colors.user}\n                    />\n                    <span class=\"cv-evaluation-description\" style={{color: this.props.colors.user}}>{this.props.description}</span>\n                </div>\n                <div>\n                    <CVNumberLine \n                        id={\"cv-evaluation-\" + this.props.index + \"-crowd\"}\n                        title={\"Crowd Average\"}\n                        height={140} width={700}\n                        value={this.props.votes.average} scale={this.props.scale}\n                        votes={this.props.votes.distribution}\n                        color={this.props.colors.average}\n                    />\n                </div>\n            </div>\n        );   \n    }\n\n    componentDidMount() {\n        \n        return;\n\n        var canvas = document.getElementById(\"cv-evaluation-\" + this.props.index);\n        var ctx = canvas.getContext(\"2d\");\n\n        var height = canvas.height;\n        var width = canvas.width;\n\n        var linewidth = width;\n\n        ctx.moveTo(0,height/2);\n        ctx.lineTo(linewidth,height/2);\n        ctx.stroke();\n\n        var tickHeight = 10;\n        var ticks = [\n            linewidth * 0.1,\n            linewidth * 0.3,\n            linewidth * 0.5,\n            linewidth * 0.7,\n            linewidth * 0.9\n        ];\n\n        for(var i = 0; i < ticks.length; i++) {\n            ctx.moveTo(ticks[i],height/2);\n            ctx.lineTo(ticks[i], (height/2) - tickHeight);\n            ctx.stroke();\n        }\n\n    }\n}\n\nCVEvaluation.propTypes = {\n   // ... prop types here\n}\n\nCVEvaluation.defaultProps = {\n    // ... default props here\n}\n\nexport default CVEvaluation;\n"]},"metadata":{},"sourceType":"module"}