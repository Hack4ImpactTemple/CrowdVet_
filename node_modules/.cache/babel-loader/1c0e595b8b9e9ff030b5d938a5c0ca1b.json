{"ast":null,"code":"import _classCallCheck from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/src/pages/EvaluationResultsPage/CVNumberLineHeader.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CVNumberLineHeader.css';\n\nvar CVNumberLineHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CVNumberLineHeader, _Component);\n\n  function CVNumberLineHeader(props) {\n    var _this;\n\n    _classCallCheck(this, CVNumberLineHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CVNumberLineHeader).call(this, props));\n    _this.state = {};\n    _this.props = props;\n    return _this;\n  }\n\n  _createClass(CVNumberLineHeader, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"canvas\", {\n        id: this.props.id,\n        class: \"cv-number-line-header\",\n        height: this.props.height,\n        width: this.props.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var canvas = document.getElementById(this.props.id);\n      var ctx = canvas.getContext(\"2d\");\n      ctx.strokeStyle = this.props.color;\n      ctx.fillStyle = this.props.color;\n      var height = canvas.height;\n      var width = canvas.width; // Split between label and circles at x=124\n\n      var split = 124;\n      var circleY = height / 2;\n      var circleR = 16; // Divide the circles at even distances\n\n      var padding = (width - split) / (2 * (this.props.end - this.props.start + 1)); // Draw the label (e.g. \"Prioritization = \")\n\n      ctx.font = \"18px Roboto\";\n      ctx.textAlign = \"left\";\n      ctx.fillText(this.props.title, 0, circleY); // Draw the circles\n\n      for (var i = 1, n = this.props.start; i < 2 * (this.props.end - this.props.start + 1); i += 2, n++) {\n        var circleX = split + i * padding; // Draw the circle\n\n        ctx.beginPath();\n        ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n        ctx.stroke(); // Draw the label in the circle\n\n        ctx.font = \"14px Roboto\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(n, circleX, circleY + circleY / 4);\n      }\n    }\n  }]);\n\n  return CVNumberLineHeader;\n}(Component);\n\nCVNumberLineHeader.propTypes = {// ... prop types here\n};\nCVNumberLineHeader.defaultProps = {// ... default props here\n};\nexport default CVNumberLineHeader;","map":{"version":3,"sources":["/Users/brendanmanning/Documents/Professional/Hack4Impact/CrowdVet_/src/pages/EvaluationResultsPage/CVNumberLineHeader.js"],"names":["React","Component","PropTypes","CVNumberLineHeader","props","state","id","height","width","canvas","document","getElementById","ctx","getContext","strokeStyle","color","fillStyle","split","circleY","circleR","padding","end","start","font","textAlign","fillText","title","i","n","circleX","beginPath","arc","Math","PI","stroke","propTypes","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,0BAAP;;IAEMC,kB;;;;;AAEF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,4FAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKD,KAAL,GAAaA,KAAb;AAJe;AAKlB;;;;6BAEQ;AACL,aAAO;AAAQ,QAAA,EAAE,EAAE,KAAKA,KAAL,CAAWE,EAAvB;AAA2B,QAAA,KAAK,EAAC,uBAAjC;AAAyD,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MAA5E;AAAoF,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;wCAEmB;AAChB,UAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAKP,KAAL,CAAWE,EAAnC,CAAb;AAEA,UAAIM,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAV;AACAD,MAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAKV,KAAL,CAAWW,KAA7B;AACAH,MAAAA,GAAG,CAACI,SAAJ,GAAgB,KAAKZ,KAAL,CAAWW,KAA3B;AAEA,UAAIR,MAAM,GAAGE,MAAM,CAACF,MAApB;AACA,UAAIC,KAAK,GAAGC,MAAM,CAACD,KAAnB,CARgB,CAUhB;;AACA,UAAIS,KAAK,GAAG,GAAZ;AACA,UAAIC,OAAO,GAAGX,MAAM,GAAG,CAAvB;AACA,UAAIY,OAAO,GAAG,EAAd,CAbgB,CAehB;;AACA,UAAIC,OAAO,GAAG,CAACZ,KAAK,GAAGS,KAAT,KAAmB,KAAK,KAAKb,KAAL,CAAWiB,GAAX,GAAiB,KAAKjB,KAAL,CAAWkB,KAA5B,GAAoC,CAAzC,CAAnB,CAAd,CAhBgB,CAkBhB;;AACAV,MAAAA,GAAG,CAACW,IAAJ,GAAW,aAAX;AACAX,MAAAA,GAAG,CAACY,SAAJ,GAAgB,MAAhB;AACAZ,MAAAA,GAAG,CAACa,QAAJ,CAAa,KAAKrB,KAAL,CAAWsB,KAAxB,EAA+B,CAA/B,EAAkCR,OAAlC,EArBgB,CAuBhB;;AACA,WAAI,IAAIS,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKxB,KAAL,CAAWkB,KAA9B,EAAqCK,CAAC,GAAG,KAAK,KAAKvB,KAAL,CAAWiB,GAAX,GAAiB,KAAKjB,KAAL,CAAWkB,KAA5B,GAAoC,CAAzC,CAAzC,EAAsFK,CAAC,IAAI,CAAL,EAAQC,CAAC,EAA/F,EAAmG;AAE/F,YAAIC,OAAO,GAAGZ,KAAK,GAAIU,CAAC,GAAGP,OAA3B,CAF+F,CAI/F;;AACAR,QAAAA,GAAG,CAACkB,SAAJ;AACAlB,QAAAA,GAAG,CAACmB,GAAJ,CAAQF,OAAR,EAAiBX,OAAjB,EAA0BC,OAA1B,EAAmC,CAAnC,EAAsC,IAAIa,IAAI,CAACC,EAA/C;AACArB,QAAAA,GAAG,CAACsB,MAAJ,GAP+F,CAS/F;;AACAtB,QAAAA,GAAG,CAACW,IAAJ,GAAW,aAAX;AACAX,QAAAA,GAAG,CAACY,SAAJ,GAAgB,QAAhB;AACAZ,QAAAA,GAAG,CAACa,QAAJ,CAAaG,CAAb,EAAgBC,OAAhB,EAAyBX,OAAO,GAAIA,OAAO,GAAG,CAA9C;AAEH;AAEJ;;;;EArD4BjB,S;;AAwDjCE,kBAAkB,CAACgC,SAAnB,GAA+B,CAC5B;AAD4B,CAA/B;AAIAhC,kBAAkB,CAACiC,YAAnB,GAAkC,CAC9B;AAD8B,CAAlC;AAIA,eAAejC,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CVNumberLineHeader.css';\n\nclass CVNumberLineHeader extends Component {\n  \n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        this.props = props;\n    }\n  \n    render() { \n        return <canvas id={this.props.id} class=\"cv-number-line-header\" height={this.props.height} width={this.props.width}/>\n    }\n\n    componentDidMount() {\n        var canvas = document.getElementById(this.props.id);\n\n        var ctx = canvas.getContext(\"2d\");\n        ctx.strokeStyle = this.props.color;\n        ctx.fillStyle = this.props.color;\n   \n        var height = canvas.height;\n        var width = canvas.width;\n\n        // Split between label and circles at x=124\n        var split = 124;\n        var circleY = height / 2;\n        var circleR = 16;\n\n        // Divide the circles at even distances\n        var padding = (width - split) / (2 * (this.props.end - this.props.start + 1));\n\n        // Draw the label (e.g. \"Prioritization = \")\n        ctx.font = \"18px Roboto\";\n        ctx.textAlign = \"left\";\n        ctx.fillText(this.props.title, 0, circleY);\n\n        // Draw the circles\n        for(var i = 1, n = this.props.start; i < 2 * (this.props.end - this.props.start + 1); i += 2, n++) {\n            \n            var circleX = split + (i * padding);\n\n            // Draw the circle\n            ctx.beginPath();\n            ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n            ctx.stroke();\n\n            // Draw the label in the circle\n            ctx.font = \"14px Roboto\";\n            ctx.textAlign = \"center\";\n            ctx.fillText(n, circleX, circleY + (circleY / 4));\n            \n        }\n\n    }\n}\n\nCVNumberLineHeader.propTypes = {\n   // ... prop types here\n}\n\nCVNumberLineHeader.defaultProps = {\n    // ... default props here\n}\n\nexport default CVNumberLineHeader;\n"]},"metadata":{},"sourceType":"module"}